Begin,
Create Lines(1),
    
    def,str:Dimension="Energy"
    def,str:DimSymbol="((L^2)*M))/(T^2)"
    def,str:VariableName="E"
    def,str:Symbol="E"

    def,str:BaseUnitVar="x"
    def,str:OtherUnitVar="x"
    
    enum:Type{
        SI
        Imperial
        Other
    }
    
    def,parm:Joule{
        --Setup
        def,bol:IsBase=True
        def,E(Type):UnitType=SI
        --Unit
        def,str:Name="Joule"
        def,str:Symbol="J"
        --Equations
        def,str:ToBaseEq="x"
        def,str:FromBaseEq="x"
    }
    def,parm:BTU{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="British thermal unit"
        def,str:Symbol="BTU"
        --Equations
        def,str:ToBaseEq="x*1.05505585262*(10^3)"
        def,str:FromBaseEq="x/(1.05505585262*(10^3))"
    }
    def,parm:Calorie{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Calorie"
        def,str:Symbol="cal"
        --Equations
        def,str:ToBaseEq="x*4.1868"
        def,str:FromBaseEq="x/4.1868"
    }
    def,parm:CalorieFood{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Calorie (Food)"
        def,str:Symbol="Cal"
        --Equations
        def,str:ToBaseEq="x*4184"
        def,str:FromBaseEq="x/4184"
    }
    def,parm:Electronvolt{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=SI
        --Unit
        def,str:Name="Electronvolt"
        def,str:Symbol="eV"
        --Equations
        def,str:ToBaseEq="x*1.6021765653535*(10^-19)"
        def,str:FromBaseEq="x/(1.6021765653535*(10^-19))"
    }
    def,parm:Erg{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Erg"
        def,str:Symbol="erg"
        --Equations
        def,str:ToBaseEq="x*(10^-7)"
        def,str:FromBaseEq="x/(10^-7)"
    }
    def,parm:Hartree{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Hartree"
        def,str:Symbol="Eh"
        --Equations
        def,str:ToBaseEq="x*4.359744*(10^-18)"
        def,str:FromBaseEq="x/(4.359744*(10^-18))"
    }
    def,parm:Rydberg{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Rydberg"
        def,str:Symbol="Ry"
        --Equations
        def,str:ToBaseEq="x*2.179872*(10^-18)"
        def,str:FromBaseEq="x/(2.179872*(10^-18))"
    }
    def,parm:Thermie{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Thermie"
        def,str:Symbol="th"
        --Equations
        def,str:ToBaseEq="x*4.1868*(10^6)"
        def,str:FromBaseEq="x/(4.1868*(10^6))"
    }