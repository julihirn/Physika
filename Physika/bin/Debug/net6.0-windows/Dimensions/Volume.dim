Begin,
Create Lines(1),
    
    def,str:Dimension="Volume"
    def,str:DimSymbol="L^3"
    def,str:Symbol="V"
    def,str:VariableName="vol"

    def,str:BaseUnitVar="x"
    def,str:OtherUnitVar="x"
    
    enum:Type{
        SI
        Imperial
        Other
    }
    
    def,parm:MetersCubed{
        --Setup
        def,bol:IsBase=True
        def,bol:UsePrefixEquation=True
        def,E(Type):UnitType=SI
        --Unit
        def,str:Name="Cubic Meter"
        def,str:Symbol="m³"
        --Equations
        def,str:ToBaseEq="x"
        def,str:FromBaseEq="x"

        def,str:PrefixEquation="x^3"
    }
    def,parm:AcreFoot{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Acre Foot"
        def,str:Symbol="ac ft"
        --Equations
        def,str:ToBaseEq="x*1233.48183754752"
        def,str:FromBaseEq="x/1233.48183754752"
    }
    def,parm:AcreInch{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Acre Inch"
        def,str:Symbol="ac in"
        --Equations
        def,str:ToBaseEq="x*102.79015312896"
        def,str:FromBaseEq="x/102.79015312896"
    }
    def,parm:Barrel{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Barrel"
        def,str:Symbol="bl"
        --Equations
        def,str:ToBaseEq="x*0.16365924"
        def,str:FromBaseEq="x/0.16365924"
    }
    def,parm:BoardFoot{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Board Foot"
        def,str:Symbol="bdft"
        --Equations
        def,str:ToBaseEq="x*(2.359737216*(10^(-3)))"
        def,str:FromBaseEq="x/(2.359737216*(10^(-3)))"
    }
    def,parm:Bucket{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Bucket"
        def,str:Symbol="bkt"
        --Equations
        def,str:ToBaseEq="x*0.01818436"
        def,str:FromBaseEq="x/0.01818436"
    }
    def,parm:Bushel{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Bushel"
        def,str:Symbol="bu"
        --Equations
        def,str:ToBaseEq="x*0.03636872"
        def,str:FromBaseEq="x/0.03636872"
    }
    def,parm:CubicFathom{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Cubic Fathom"
        def,str:Symbol="cu fm"
        --Equations
        def,str:ToBaseEq="x*6.116438863872"
        def,str:FromBaseEq="x/6.116438863872"
    }
    def,parm:CubicFoot{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Cubic Foot"
        def,str:Symbol="ft³"
        --Equations
        def,str:ToBaseEq="x*0.028316846592"
        def,str:FromBaseEq="x/0.028316846592"
    }
    def,parm:CubicInch{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Cubic Inch"
        def,str:Symbol="in³"
        --Equations
        def,str:ToBaseEq="x*(16.387064*(10^(-6)))"
        def,str:FromBaseEq="x/(16.387064*(10^(-6)))"
    }
    def,parm:CubicMile{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Cubic Mile"
        def,str:Symbol="cu mi"
        --Equations
        def,str:ToBaseEq="x*4168181825.440579584"
        def,str:FromBaseEq="x/4168181825.440579584"
    }
    def,parm:CubicYard{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Cubic Yard"
        def,str:Symbol="yd³"
        --Equations
        def,str:ToBaseEq="x*0.764554857984"
        def,str:FromBaseEq="x/0.764554857984"
    }
    def,parm:CupsMetric{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Cups (Metric)"
        def,str:Symbol="Cups"
        --Equations
        def,str:ToBaseEq="x*(250.0*(10^(-6)))"
        def,str:FromBaseEq="x/(250.0*(10^(-6)))"
    }
    def,parm:CupsUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Cups (US)"
        def,str:Symbol="c"
        --Equations
        def,str:ToBaseEq="x*(236.5882365*(10^(-6)))"
        def,str:FromBaseEq="x/(236.5882365*(10^(-6)))"
    }
    def,parm:DropMetric{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Drop (Metric)"
        def,str:Symbol="Drops"
        --Equations
        def,str:ToBaseEq="x*(50.0*(10^(-9)))"
        def,str:FromBaseEq="x/(50.0*(10^(-9)))"
    }
    def,parm:DropUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Drop (US)"
        def,str:Symbol="gtt"
        --Equations
        def,str:ToBaseEq="x*(82.1486932291616161616*(10^(-9)))"
        def,str:FromBaseEq="x/(82.1486932291616161616*(10^(-9)))"
    }
    def,parm:FluidDrachm{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Fluid Drachm"
        def,str:Symbol="fl dr"
        --Equations
        def,str:ToBaseEq="x*(3.5516328125*(10^(-6)))"
        def,str:FromBaseEq="x/(3.5516328125*(10^(-6)))"
    }
    def,parm:FluidDram{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Fluid Dram"
        def,str:Symbol="fl dr"
        --Equations
        def,str:ToBaseEq="x*(3.6966911953125*(10^(-6)))"
        def,str:FromBaseEq="x/(3.6966911953125*(10^(-6)))"
    }
    def,parm:FluidScruple{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Fluid Scruple"
        def,str:Symbol="fl s"
        --Equations
        def,str:ToBaseEq="x*(1.1838776041616161616*(10^(-6)))"
        def,str:FromBaseEq="x/(1.1838776041616161616*(10^(-6)))"
    }
    def,parm:Gallon{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Gallon"
        def,str:Symbol="gal"
        --Equations
        def,str:ToBaseEq="x*(4.54609*(10^(-3)))"
        def,str:FromBaseEq="x/(4.54609*(10^(-3)))"
    }
    def,parm:GallonUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Gallon (US)"
        def,str:Symbol="gal"
        --Equations
        def,str:ToBaseEq="x*(3.785411784*(10^(-3)))"
        def,str:FromBaseEq="x/(3.785411784*(10^(-3)))"
    }
    def,parm:Gill{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Gill"
        def,str:Symbol="gi"
        --Equations
        def,str:ToBaseEq="x*(142.0653125*(10^(-6)))"
        def,str:FromBaseEq="x/(142.0653125*(10^(-6)))"
    }
    def,parm:GillUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Gill (US)"
        def,str:Symbol="gi"
        --Equations
        def,str:ToBaseEq="x*(118.29411825*(10^(-6)))"
        def,str:FromBaseEq="x/(118.29411825*(10^(-6)))"
    }
    def,parm:Hogshead{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Hogshead"
        def,str:Symbol="hhd"
        --Equations
        def,str:ToBaseEq="x*0.32731848"
        def,str:FromBaseEq="x/0.32731848"
    }
    def,parm:HogsheadUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Hogshead (US)"
        def,str:Symbol="hhd"
        --Equations
        def,str:ToBaseEq="x*0.238480942392"
        def,str:FromBaseEq="x/0.238480942392"
    }
    def,parm:Lambda{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Lambda"
        def,str:Symbol="λ"
        --Equations
        def,str:ToBaseEq="x*(10^(-9))"
        def,str:FromBaseEq="x/(10^(-9))"
    }
    def,parm:Litre{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=SI
        --Unit
        def,str:Name="Litre"
        def,str:Symbol="L"
        --Equations
        def,str:ToBaseEq="x*0.001"
        def,str:FromBaseEq="x/0.001"
    }
    def,parm:Minim{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Minim"
        def,str:Symbol="min"
        --Equations
        def,str:ToBaseEq="x*(59.1938802083*(10^(-9)))"
        def,str:FromBaseEq="x/(59.1938802083*(10^(-9)))"
    }
    def,parm:MinimUS{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Minim (US)"
        def,str:Symbol="min"
        --Equations
        def,str:ToBaseEq="x*(61.611519921875*(10^(-9)))"
        def,str:FromBaseEq="x/(61.611519921875*(10^(-9)))"
    }
    def,parm:Ounce{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Ounce"
        def,str:Symbol="fl oz"
        --Equations
        def,str:ToBaseEq="x*(28.4130625*(10^(-6)))"
        def,str:FromBaseEq="x/(28.4130625*(10^(-6)))"
    }
    def,parm:Peck{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Imperial
        --Unit
        def,str:Name="Peck"
        def,str:Symbol="pk"
        --Equations
        def,str:ToBaseEq="x*(9.09218*(10^(-3)))"
        def,str:FromBaseEq="x/(9.09218*(10^(-3)))"
    }
    def,parm:Perch{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Perch"
        def,str:Symbol="per"
        --Equations
        def,str:ToBaseEq="x*0.700841953152"
        def,str:FromBaseEq="x/0.700841953152"
    }
    def,parm:Pint{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Pint"
        def,str:Symbol="pt"
        --Equations
         def,str:ToBaseEq="x*(568.26125*(10^(-6)))"
        def,str:FromBaseEq="x/(568.26125*(10^(-6)))"
    }
    def,parm:Quart{
        --Setup
        def,bol:IsBase=False
        def,E(Type):UnitType=Other
        --Unit
        def,str:Name="Quart"
        def,str:Symbol="qt"
        --Equations
         def,str:ToBaseEq="x*(1.1365225*(10^(-3)))"
        def,str:FromBaseEq="x/(1.1365225*(10^(-3)))"
    }